/* 
 * Drag[en]gine DragonScript Script Module
 *
 * Copyright (C) 2020, Roland Pl√ºss (roland@rptd.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


namespace Dragengine.Scenery

pin Dragengine.Gui
pin Dragengine.Utils



/**
 * \brief Map of rect area values class property for use with XML loading.
 * 
 * Similar to ECPRectAreaList but uses a Dictionary mapping RectArea to String.
 */
class ECPRectAreaMap extends ElementClassProperty
	/** \brief Dictionary mapping String to RectArea. */
	private var Dictionary pMap
	
	
	
	/** \brief Create property. */
	public func new( String name ) super( name )
		this.pMap = Dictionary.new()
	end
	
	
	
	/** \brief Number of rect areas. */
	public func int getCount()
		return this.pMap.getCount()
	end
	
	/** \brief RectArea with String or \em null if not found. */
	public func RectArea getAt( String name )
		return this.pMap.getAt( name ) cast RectArea
	end
	
	/** \brief Array of String names. */
	public func Array getNames()
		return this.pMap.getKeys()
	end
	
	/**
	 * \brief Visit rect areas using block.
	 * 
	 * Block receives parameters String name and RectArea area.
	 */
	public func void forEach( Block ablock )
		this.pMap.forEach( ablock )
	end
	
	/** \brief Remove all react areas. */
	public func void removeAll()
		this.pMap.removeAll()
	end
	
	/** \brief Add or replace react area with name. */
	public func void setAt( String name, RectArea area )
		this.pMap.setAt( name, area )
	end
	
	
	
	/** \brief Set value of property from XML decoded value. */
	public func void setValue( Object value )
		this.pMap.removeAll()
		( value cast Dictionary ).forEach( block String key, RectArea value
			this.pMap.setAt( key, value )
		end )
	end
end
