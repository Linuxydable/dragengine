/* 
 * Drag[en]gine DragonScript Script Module
 *
 * Copyright (C) 2020, Roland Pl√ºss (roland@rptd.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


namespace Dragengine.Scenery

pin Dragengine.Gui
pin Dragengine.LoadSave
pin Dragengine.Preloading
pin Dragengine.Utils



/**
 * \brief Navigation space resource element class property for use with XML loading.
 * 
 * Navigation space resource is set from XML using a path. Loads the resource during
 * preloading. The value of the property is then the loaded resource. If loading fails
 * null resource is stored.
 * 
 * \note Navigation space resources can not be shared. For this reason there exists no
 *       getNavigationSpace() method but a getNavigationSpaceCopy() method which returns
 *       a copy of the navigation space which is safe to be used and a
 *       getNavigationSpaceShared() which returns the shared source navigation space.
 */
class ECPNavigationSpace extends ElementClassProperty
	private var LoadNavigationSpace pLoader
	private var String pPath
	private var NavigationSpace pNavigationSpace
	private var bool pHasPreloaded
	
	
	
	/** \brief Create property. */
	public func new( String name, LoadNavigationSpace loader ) super( name )
		this.pLoader = loader
	end
	
	/** \brief Create property with initial path. */
	public func new( String name, LoadNavigationSpace loader, String path ) super( name )
		this.pLoader = loader
		this.pPath = path
	end
	
	
	
	/** \brief Navigation spa ce loader. */
	public func LoadNavigationSpace getLoader()
		return this.pLoader
	end
	
	/** \brief Path to navigation space resource. */
	public func String getPath()
		return this.pPath
	end
	
	/** \brief Set path to navigation space resource. */
	public func void setPath( String path )
		this.pPath = path
	end
	
	/**
	 * \brief Shared navigation space resource or \em null if not present.
	 * 
	 * \warning Do not use this navigation space in a world. It can not be shared.
	 *          This method is for informational purpose. Use getNavigationSpaceCopy()
	 *          to obtain a navigation space that you can add to world safely.
	 */
	public func NavigationSpace getNavigationSpaceShared()
		return this.pNavigationSpace
	end
	
	/**
	 * \brief Copy of shared navigation space resource or \em null if not present.
	 * 
	 * \note Navigation space can not be shared. This method returns a copy which is
	 *       safe to be added to world.
	 */
	public func NavigationSpace getNavigationSpaceCopy()
		if this.pNavigationSpace != null
			return NavigationSpace.new( this.pNavigationSpace )
			
		else
			return null
		end
	end
	
	/** \brief Set navigation space resource or \em null if not present. */
	public func void setNavigationSpace( NavigationSpace navigationSpace )
		this.pNavigationSpace = navigationSpace
	end
	
	/** \brief Property has been preloaded. */
	public func bool getHasPreloaded()
		return this.pHasPreloaded
	end
	
	
	
	/** \brief Set value of property from XML decoded value. */
	public func void setValue( Object value )
		this.pPath = value cast String
	end
	
	
	
	/** \brief Preload resources if supported. */
	public func void preloadResources( ElementClass elementClass, PreloadCounter counter )
		if this.pHasPreloaded
			return
		end
		
		this.pHasPreloaded = true
		
		if this.pPath == null or this.pPath.empty()
			return
		end
		
		try
			this.pNavigationSpace = this.pLoader.loadFromFile( \
				File.absolutePath( this.pPath, elementClass.getBasePath() ).getPath() )
			
		catch Exception e
		end
	end
	
	/**
	 * \brief Log preloading problems.
	 * \returns True if problems are present.
	 */
	public func bool logPreloadProblems( ElementClass elementClass, Console console )
		if this.pPath != null and not this.pPath.empty() and this.pNavigationSpace == null
			console.addMessage( "Property " + elementClass.getClassname() + "." \
				+ this.getName() + ": Failed loading navigation space " \
				+ File.absolutePath( this.pPath, elementClass.getBasePath() ).getPath() )
			return true
		end
		return false
	end
end
