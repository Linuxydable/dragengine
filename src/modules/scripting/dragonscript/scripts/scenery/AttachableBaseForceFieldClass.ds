/* 
 * Drag[en]gine DragonScript Script Module
 *
 * Copyright (C) 2020, Roland Pl√ºss (roland@rptd.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


namespace Dragengine.Scenery

pin Dragengine.TriggerSystem


/**
 * \brief Attachable force field class using force field behavior.
 */
class AttachableBaseForceFieldClass extends BehaviorElementClass
	private var ECBehaviorCollider pCollider
	private var ECBehaviorForceField pForceField
	private var ECBehaviorAttachToParent pAttachToParent
	
	
	
	/** \brief Create element class. */
	public func new() this( "AttachableBaseForceField" )
	end
	
	/** \brief Create element class. */
	public func new( TSTriggerTable triggerTable ) this( "AttachableBaseForceField", triggerTable )
	end
	
	/** \brief Create element class using loaders from BaseGameApp. */
	public func new( String className ) this( className, BaseGameApp.getApp().getTriggerTable() )
	end
	
	/** \brief Create element class. */
	public func new( String className, TSTriggerTable triggerTable ) super( className )
		this.pCollider = ECBehaviorCollider.new( this, null )
		this.pCollider.setGhost()
		this.pForceField = ECBehaviorForceField.new( this, this.pCollider, triggerTable )
		this.pAttachToParent = ECBehaviorAttachToParent.new( this, this.pCollider, null )
	end
	
	
	
	/** \brief Collider behavior. */
	public func ECBehaviorCollider getCollider()
		return this.pCollider
	end
	
	/** \brief ForceField behavior. */
	public func ECBehaviorForceField getForceField()
		return this.pForceField
	end
	
	/** \brief Attach to parent behavior. */
	public func ECBehaviorAttachToParent getAttachToParent()
		return this.pAttachToParent
	end
	
	
	
	/** \brief Create copy of element class. */
	public func ElementClass duplicateNamed( String classname )
		return AttachableBaseForceFieldClass.new( classname )
	end
	
	
	
	/** \brief Create element instance. */
	protected func Element createElement()
		return AttachableBaseForceField.new( this )
	end
end
