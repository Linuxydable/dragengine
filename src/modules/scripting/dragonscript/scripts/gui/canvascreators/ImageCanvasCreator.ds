/* 
 * Drag[en]gine DragonScript Script Module
 *
 * Copyright (C) 2020, Roland Pl√ºss (roland@rptd.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


namespace Dragengine.Gui.CanvasCreators

pin Dragengine.Gui
pin Dragengine.Scenery


/**
 * \brief Canvas creator creating a single image canvas.
 * 
 * Creates an image canvas with an image stretched to fit the entire widget.
 */
class ImageCanvasCreator extends DefaultCanvasCreator
	/** \brief Image. */
	private var Image pImage
	
	/** \brief Color matrix to use for created canvas or \em null to use none. */
	private var ColorMatrix pColorMatrix
	
	
	
	/** \brief Create canvas creator. */
	public func new()
	end
	
	/** \brief Create canvas creator. */
	public func new( Image image )
		this.pImage = image
	end
	
	/** \brief Create copy of canvas creator. */
	public func new( ImageCanvasCreator creator ) super( creator )
		this.pImage = creator.pImage
		this.pColorMatrix = creator.pColorMatrix
	end
	
	
	
	/** \brief Image. */
	public func Image getImage()
		return this.pImage
	end
	
	/** \brief Set image. */
	public func void setImage( Image image )
		this.pImage = image
	end
	
	/** \brief Color matrix to use for created canvas or \em null to use none. */
	public func ColorMatrix getColorMatrix()
		return this.pColorMatrix
	end
	
	/** \brief Set color matrix to use for created canvas or \em null to use none. */
	public func void setColorMatrix( ColorMatrix colorMatrix )
		this.pColorMatrix = colorMatrix
	end
	
	/**
	 * \brief Set parameter.
	 * 
	 * Supported parameters:
	 * | name | value | Setter |
	 * | image | Image | setImage |
	 * | colorMatrix | ColorMatrix | setColorMatrix |
	 */
	public func void setParameter( String name, Object value )
		if name.equals( "image" )
			this.setImage( value cast Image )
			
		elif name.equals( "colorMatrix" )
			this.setColorMatrix( value cast ColorMatrix )
			
		else
			throw EInvalidParam.new()
		end
	end
	
	/** \brief Create copy of canvas creator. */
	public func CanvasCreator copyCanvasCreator()
		return ImageCanvasCreator.new( this )
	end
	
	
	
	/** \brief Create canvas for a specific widget size. */
	public func Canvas createCanvas( Point size )
		var CanvasImage canvas = CanvasImage.new()
		canvas.setImage( this.pImage )
		canvas.setSize( size )
		
		if this.pColorMatrix != null
			canvas.setColorTransform( this.pColorMatrix )
		end
		
		return canvas
	end
end
